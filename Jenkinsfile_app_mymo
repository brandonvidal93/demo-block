pipeline{
  agent {
      label 'ecs-aws'
  }
	
	triggers {
		pollSCM('@hourly')
	}
	
	options {
		buildDiscarder(logRotator(numToKeepStr: '5'))
		disableConcurrentBuilds()
	}
		
	stages {
		stage('Install NPM') {
			steps {
				sh 'npm i'
				// sh 'npm run build'					
			}
		}	
		
		stage('Test') {
			steps {
				sh 'npm run test'					
			}
		}

		stage('Sonar Analysis'){
			steps{
				echo '------------>Analisis de código estático<------------'
				 withSonarQubeEnv('Sonarqube') {
              sh "sonar-scanner"
         }
			}
		}

    stage("Quality Gate"){
        options {
            timeout(time: 15, unit: 'MINUTES')
        }
        steps{
            script{
                sleep(10)
                def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }
    }
	}


	post {
		failure {
			mail(to: 'brandon.vidal@ceiba.com.co',
			body:"Build failed in Jenkins: Project: ${env.JOB_NAME} Build /n Number: ${env.BUILD_NUMBER} URL de build: ${env.BUILD_NUMBER}/n/nPlease go to ${env.BUILD_URL} and verify the build",
			subject: "ERROR CI: ${env.JOB_NAME}")
		}
	}
}